class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int row=matrix.size();
        if (row==0)
            return 0;
        int col=matrix[0].size();
        if (col==0)
            return 0;
        int f[row][col];
        int max=0;
        
        for (int i=0;i<col;i++)
        if (matrix[0][i]=='1')
        {
            f[0][i]=1;
            max=1;
        }
        else
            f[0][i]=0;
        for (int j=0;j<row;j++)
        if (matrix[j][0]=='1')
        {
            f[j][0]=1;
            max=1;
        }
        else
            f[j][0]=0;
        
        
        for (int i=1;i<row;i++)
            for (int j=1;j<col;j++)
            {
                if (matrix[i][j]=='1')
                {
                    f[i][j]=std::min(f[i-1][j],f[i][j-1]);
                    f[i][j]=std::min(f[i][j],f[i-1][j-1]);
                    f[i][j]++;
                    max=std::max(f[i][j]*f[i][j],max);
                }
                else
                    f[i][j]=0;
                
            }
            return max;
    }
};